name: "rerun-test"

on: 
  issue_comment:
    types: [created, edited]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: "Check for Command"
      if: contains(github.event.comment.html_url, '/pull/')
      id: command
      uses: xt0rted/slash-command-action@065da288bcfe24ff96b3364c7aac1f6dca0fb027 #1.1.0
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        command: reruntest
        reaction: "true"
        reaction-type: "eyes"
    
    - name: Git settings
      run: |
          git config --global user.name release-machine
          git config --global user.email email@example.com

    - name: "Get branch name"
      uses: xt0rted/pull-request-comment-branch@29fe0354c01b30fb3de76f193ab33abf8fe5ddb0 #1.2.0
      id: get_branch
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}

    - name: "Checkout"
      uses: actions/checkout@v2
      with:
        ref: ${{ steps.get_branch.outputs.head_ref }}

    - name: "Post Comment"
      uses: actions/github-script@v3
      env:
        MESSAGE: |
          テストを再実行しています。しばらくお待ちください。
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: process.env.MESSAGE
          })
    - uses: actions/checkout@v3

    - name: set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version: 1.20
  
    - id: rerun-test
      run: |
          cd server && go build -v ./...
          go test ./...
      
    - name: plan success message
      uses: actions/github-script@0.9.0
      env:
        STDOUT: "```${{ steps.rerun-test.outcome }}```"
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
            github.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: "#### test  result\n" + process.env.STDOUT
                })
