name: "rerun-lint"
on:
  issue_comment:
    types: [created, edited]

jobs:
  build:
    runs-on: ubuntu-latest
      
    steps:
        - name: "Check for Command"
          if: contains(github.event.comment.html_url, '/pull/')
          id: command
          uses: xt0rted/slash-command-action@bf51f8f5f4ea3d58abc7eca58f77104182b23e88 #2.0.0
          with:
              repo-token: ${{ secrets.GITHUB_TOKEN }}
              command: rerunlint
              reaction: "true"
              reaction-type: "eyes"
          
        - name: Git settings
          run: |
            git config --global user.name release-machine
            git config --global user.email email@example.com
      
        - name: "Get branch name"
          uses: xt0rted/pull-request-comment-branch@d97294d304604fa98a2600a6e2f916a84b596dc7 #2.0.0
          id: get_branch
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
      
        - name: "Checkout"
          uses: actions/checkout@v4
          with:
            ref: ${{ steps.get_branch.outputs.head_ref }}
      
        - name: "Post Comment"
          uses: actions/github-script@v7.0.0
          env:
            MESSAGE: |
                lintを再実行しています。しばらくお待ちください。
          with:
              github-token: ${{secrets.GITHUB_TOKEN}}
              script: |
                github.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: process.env.MESSAGE
                })
        - uses: actions/checkout@v4

        - uses: actions/setup-go@v4
          with:
            go-version: '1.20'
            cache: false
        - uses: actions/checkout@v4
            
        - id: rerun-lint
          uses: reviewdog/action-golangci-lint@v2
          with:
           workdir: ./server
    
        - name: plan success message
          uses: actions/github-script@v7.0.0
          env:
            STDOUT: "```${{ steps.rerun-lint.outcome }}```"
          with:
             github-token: ${{secrets.GITHUB_TOKEN}}
             script: |
                 github.issues.createComment({
                       issue_number: context.issue.number,
                       owner: context.repo.owner,
                       repo: context.repo.repo,
                       body: "#### lint result\n" + process.env.STDOUT
                     })
        